#!/bin/sh
# shellcheck shell=ash
# shellcheck disable=SC2164 # no handling for cd to non-existing folder
# WebUI icon used from http://icons8.com 
DEBUG=1 # don't delete the logfile


# uninstall-Errors nach revoke.err schreiben und diese erhalten, falls nicht leer
# still missing: limit the size of te logfile! (log rotate)

ADDON_NAME=$(basename "$0") # e.g. "hb-hs-devices-addon"
# ADDON_NAME_UPC=${ADDON_NAME^^} not available in busybox!!
ADDON_NAME_UPC=$(echo "$ADDON_NAME" | tr '[:lower:]' '[:upper:]')
# shellcheck disable=SC3060
ADDON_NAME_UPC=${ADDON_NAME_UPC/DEVICES-ADDON/Devices} # e.g. "HB-HS-Devices"

ADDON_DIR=/usr/local/addons/${ADDON_NAME}
# PATCH_DIR=${ADDON_DIR}/patch
WWW_DIR=/etc/config/addons/www/${ADDON_NAME}
LOG_DIR=${ADDON_DIR}/log
GLOBAL_LOGFILE=$LOG_DIR/inst.log
GLOBAL_ERRFILE=$LOG_DIR/inst.err
PATCH_REVOKE_ERRFILE=$ADDON_DIR/log/revoke.err
FIRMWARE_RFTYPES_DEST_DIR=/firmware/rftypes
FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR=${ADDON_DIR}/customized_firmware
FIRMWARE_RFTYPES_SOURCE_DIR=${ADDON_DIR}/firmware/rftypes
RC_DIR=/usr/local/etc/config/rc.d
CK_FIRMWARE_FILE=${FIRMWARE_RFTYPES_DEST_DIR}/hb-hs-sen-temp.xml
CK_FIRMWARE_FILE=${FIRMWARE_RFTYPES_DEST_DIR}/hb-hs-dis-lcd204.xml
# = /firmware/rftypes/hb-hs-sen-temp.xml

PATCHVERSION=0
check_ccu_fw_version()
{
  model=$(grep VERSION /boot/VERSION   | awk -F'[=.]' '{ print $2 }')
  version=$(grep VERSION /boot/VERSION | awk -F'[=.]' '{ print $3 }')
  build=$(grep VERSION /boot/VERSION   | awk -F'[=.]' '{ print $4 }')
  bdate=$(grep VERSION /boot/VERSION   | awk -F'[=.]' '{ print $5 }') # may be empty

  if [ "$model" -ge 2 ] && [ "$version" -ge 45 ]; then
    PATCHVERSION=2
  else
    PATCHVERSION=1
   fi 
}

MONIT=0
check_monit()
{
#  MONIT=$(ps -ef|grep \/usr\/bin\/monit|grep -v grep|wc -l)
# grep -v "grep" takes input line by line, and outputs only the lines in which grep does not appear.
  MONIT=$(pgrep "/usr/bin/monit" | grep -cv grep)
  echo "Found $MONIT monit process(es)" | tee -a "$GLOBAL_LOGFILE"
}

REGA=0
check_rega()
{
  REGA=$(pgrep /bin/ReGaHss | grep -cv grep)
  echo "Found $REGA ReGaHss process(es)" | tee -a "$GLOBAL_LOGFILE"
}

RFD=0
check_rfd()
{
  RFD=$(pgrep /bin/rfd|grep -cv grep)
  echo "Found $RFD rfd process(es)" | tee -a "$GLOBAL_LOGFILE"
}


##########################################################
######################## main ############################
check_ccu_fw_version # check model.version and set ${PATCHVERSION} to 1 or 2
printf "\n\n%s\n" "$(date +"%Y-%m-%d %H:%M:%S") $0 $1: Found firmware version $model.$version.$build ($bdate) - using patchversion $PATCHVERSION" | tee -a "$GLOBAL_LOGFILE"
if [ $PATCHVERSION -eq 0 ]; then
  print "\n\n#### Failure in check_ccu_fw_version! #####" | tee -a "$GLOBAL_LOGFILE"
  quit;
  fi;

# logrotate
fileSize=$(stat -c %s "$GLOBAL_LOGFILE")
if [ -n "$DEBUG" ]; then
  echo "Logfilesize $fileSize"
fi
if [ "$fileSize" -gt 10000 ]; then
  echo "LogRotate reqired"
  # rm -f "$GLOBAL_LOGFILE.old" # not required
  mv -f "$GLOBAL_LOGFILE" "$GLOBAL_LOGFILE.old"
  printf "%s\n" "Elder entries see $GLOBAL_LOGFILE.old" > "$GLOBAL_LOGFILE"
fi

case "$1" in
  ""|init|start)
    if [ ! -f "${ADDON_DIR}"/installed ] || [ ! -f ${CK_FIRMWARE_FILE} ]; then       
      printf "\n%s\n" "Starting installation V$(cat "${ADDON_DIR}"/VERSION) within '$1'" | tee -a "$GLOBAL_LOGFILE"
      if [ -f "$GLOBAL_ERRFILE" ]; then
        cp /dev/null "$GLOBAL_ERRFILE" # make it empty
      fi
      if [ -f "$PATCH_REVOKE_ERRFILE" ]; then
        truncate -s 0 "$PATCH_REVOKE_ERRFILE" # make it empty, alternative methode
      fi
      mount -o remount,rw /
        
      #### Check if monit process exists
      check_monit       
      if [ "$MONIT" -ge 1 ]; then
        echo "Stopping monitoring service for ReGaHss and RFD" | tee -a "$GLOBAL_LOGFILE"
        /usr/bin/monit unmonitor ReGaHss
        /usr/bin/monit unmonitor rfd
        fi
      
      check_rega
      if [ "$REGA" -ge 1 ]; then
        /etc/init.d/S70ReGaHss stop | tee -a "$GLOBAL_LOGFILE"
        fi
      check_rfd
      if [ "$RFD" -ge 1 ]; then
        /etc/init.d/S61rfd stop | tee -a "$GLOBAL_LOGFILE"
        fi
        
      cd "${ADDON_DIR}"
      cp -ar www/* /www/
      echo "Dateien ins /www/-Verzeichnis kopiert:" | tee -a "$GLOBAL_LOGFILE"
      find www/* -print | tee -a "$GLOBAL_LOGFILE"
      chown root:root /www/config/img/devices/250/"$ADDON_NAME"*
      chmod 755 /www/config/img/devices/250/"$ADDON_NAME"*
      chown root:root /www/config/img/devices/50/"$ADDON_NAME"*
      chmod 755 /www/config/img/devices/50/"$ADDON_NAME"*
      chown root:root /www/ise/img/icons_"$ADDON_NAME"/24/*
      chmod 755 /www/ise/img/icons_"$ADDON_NAME"/24/*
      echo "chmod 755 and chown root:root for copied icon files done" | tee -a "$GLOBAL_LOGFILE"
        
      ### Patch some files ###
      ./patchworker install "${ADDON_NAME}" ${PATCHVERSION} "$model.$version.$build.$bdate"
      # actual patchworker is nothing doing!! 

      cd /www

      if [ ! -f ${CK_FIRMWARE_FILE} ]; then
        echo "No file ${CK_FIRMWARE_FILE}, so it's a fresh installation - revoking patches not needed." | tee -a "$GLOBAL_LOGFILE"

#     else
#       ########################	REVOKE  	######################
#       echo "$1 (already installed) ######## REVOKE COMMON APPLIED PATCHES ########" | tee -a "$GLOBAL_LOGFILE"
#       patchsubdir=common
#       for patchfile in `ls ${PATCH_DIR}/revoke/$patchsubdir/* | sort`; do 
#         echo "### Rejecting $patchsubdir patch file $patchfile" | tee -a $GLOBAL_LOGFILE | tee -a $PATCH_REVOKE_ERRFILE
#         patch -R -p3 -i $patchfile >> $GLOBAL_LOGFILE 2>>$PATCH_REVOKE_ERRFILE
#         done
#        
#       echo "######## REVOKE VERSION DEPENDEND PATCHES ########" | tee -a $GLOBAL_LOGFILE
#       if [ $PATCHVERSION -le 1 ]; then
#         patchsubdir=le_343
#       else
#         patchsubdir=ge_345
#         fi
#       for patchfile in `ls ${PATCH_DIR}/revoke/$patchsubdir/* | sort`; do 
#         echo "### Rejecting $patchsubdir patch file $patchfile" | tee -a $GLOBAL_LOGFILE | tee -a $PATCH_REVOKE_ERRFILE
#         patch -R -p3 -i $patchfile >> $GLOBAL_LOGFILE 2>>$PATCH_REVOKE_ERRFILE
#         done
        fi   ## if [ ! -f ${CK_FIRMWARE_FILE} ] else
#        
#     ########################	APPLY   	######################
#     echo "######## APPLY now COMMON PATCHES ########" | tee -a $GLOBAL_LOGFILE
#     patchsubdir=common
#     for patchfile in ${PATCH_DIR}/$patchsubdir/* ; do
#       echo "### Applying $patchsubdir patch file $(basename $patchfile)" | tee -a $GLOBAL_LOGFILE | tee -a $GLOBAL_ERRFILE
#       patch -N -p3 -i $patchfile >> $GLOBAL_LOGFILE 2>>$GLOBAL_ERRFILE
#       echo "- done" | tee -a $GLOBAL_LOGFILE | tee -a $GLOBAL_ERRFILE
#       done
#        
#     echo "######## APPLY VERSION DEPENDEND PATCHES ########" | tee -a $GLOBAL_LOGFILE
#     if [ $PATCHVERSION -le 1 ]; then
#       patchsubdir=le_343
#     else
#       patchsubdir=ge_345
#       fi
#      
#     for patchfile in ${PATCH_DIR}/$patchsubdir/* ; do
#       echo "Applying $patchsubdir patch file $(basename $patchfile)" | tee -a $GLOBAL_LOGFILE | tee -a $GLOBAL_ERRFILE
#       patch -N -p3 -i $patchfile >> $GLOBAL_LOGFILE 2>>$GLOBAL_ERRFILE
#       echo "- done" | tee -a $GLOBAL_LOGFILE | tee -a $GLOBAL_ERRFILE
#       done
#         
#     [[ -f ./config/ic_common.tcl.orig ]] && rm ./config/ic_common.tcl.orig
#     [[ -f ./rega/esp/side.inc.orig ]] && rm ./rega/esp/side.inc.orig
#     [[ -f ./rega/esp/functions.fn.orig ]] && rm ./rega/esp/functions.fn.orig
#     [[ -f ./rega/pages/tabs/admin/views/programs.htm.orig ]] && rm ./rega/pages/tabs/admin/views/programs.htm.orig
#     [[ -f ./rega/esp/datapointconfigurator.fn.orig ]] && rm ./rega/esp/datapointconfigurator.fn.orig
#     [[ -f ./webui/webui.js.orig ]] && rm ./webui/webui.js.orig
#
#     ### Create Symlink to include own js file
#     echo "(Re-)Creating symlinks for jp_webui_inc.js..." | tee -a $GLOBAL_LOGFILE
#     [[ ! -f /www/webui/js/extern/jp_webui_inc.js ]] && ln -s ${ADDON_DIR}/js/jp_webui_inc.js /www/webui/js/extern/jp_webui_inc.js
	    	    
      cd "${ADDON_DIR}"
      echo "Running scripts..." | tee -a "$GLOBAL_LOGFILE"
      for f in "${ADDON_DIR}"/install_* ; do
        echo "  - $(basename "$f")" | tee -a "$GLOBAL_LOGFILE"
        "./$(basename "$f")" >> "$GLOBAL_LOGFILE" 2>>"$GLOBAL_ERRFILE"
      done

    if [ "$(find "${FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR}" -type f -iname '*.xml')" ]; then
      echo "Copying all customized *.xml firmware files to ${FIRMWARE_RFTYPES_SOURCE_DIR} ..." | tee -a "$GLOBAL_LOGFILE"
      find "${FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR}" -type f -iname '*.xml' | tee -a "$GLOBAL_LOGFILE"
      mkdir -p "${ADDON_DIR}/firmware"
      mkdir -p "${FIRMWARE_RFTYPES_SOURCE_DIR}"
      cp "${FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR}"/*.xml "${FIRMWARE_RFTYPES_SOURCE_DIR}"/
      # from /usr/local/addons/${ADDON_NAME}/customized_firmware to /usr/local/addons/${ADDON_NAME}/firmware/rftypes
    else
      echo "No customized firmware files found in ${FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR}." | tee -a "$GLOBAL_LOGFILE"
      fi

    echo "(Re-)Creating symlinks for firmware files..." | tee -a "$GLOBAL_LOGFILE"
    for f in "${FIRMWARE_RFTYPES_SOURCE_DIR}"/*.xml ; do
      rm -f "${FIRMWARE_RFTYPES_DEST_DIR}/$(basename "$f")"
      ln -s "$f" "${FIRMWARE_RFTYPES_DEST_DIR}/$(basename "$f")"
      echo "  - Link ${FIRMWARE_RFTYPES_DEST_DIR}/$(basename "$f") created"
      done

    sync
    mount -o remount,ro /
    touch "${ADDON_DIR}"/installed

    if [ "$RFD" -ge 1 ]; then
      /etc/init.d/S61rfd start | tee -a "$GLOBAL_LOGFILE"
      fi
    if [ "$REGA" -ge 1 ]; then
      /etc/init.d/S70ReGaHss start | tee -a "$GLOBAL_LOGFILE"
      fi
    if [ "$MONIT" -ge 1 ]; then
      echo "Starting monitoring service for ReGaHss and RFD" | tee -a "$GLOBAL_LOGFILE"
      /usr/bin/monit monitor ReGaHss
      /usr/bin/monit monitor rfd
      fi
    echo "Installation done." | tee -a "$GLOBAL_LOGFILE"
  else
    # INIT or Start with already installed AddOn:
    echo "$0 with $1: Already installed, Checking for subsequent customized firmware files..."
    changed=0

    for f in "${FIRMWARE_RFTYPES_SOURCE_DIR}"/*.xml ; do # ${ADDON_DIR}/firmware/rftypes
      cmp -s "${FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR}/$(basename "$f")" "$f"
      rc=$?
      if [ $rc -eq 1 ]; then
        echo "Difference detected for $(basename "$f"). Copying..."
        cp "${FIRMWARE_CUSTOM_RFTYPES_SOURCE_DIR}/$(basename "$f")" "$f"
        changed=$((changed + 1))
        fi
      done

    if [ $changed -gt 0 ]; then
      echo "$changed Firmware file(s) changed" | tee -a "$GLOBAL_LOGFILE"
      check_rfd
      if [ "$RFD" -ge 1 ]; then
        check_monit       
        if [ "$MONIT" -ge 1 ]; then
          echo " - restarting RFD [monit]" | tee -a "$GLOBAL_LOGFILE"
          /usr/bin/monit restart rfd
        else
          echo " - restarting RFD [init.d]" | tee -a "$GLOBAL_LOGFILE"
          /etc/init.d/S61rfd restart
          fi ## if [ "$MONIT" -ge 1 ] else
        fi ## if [ "$RFD" -ge 1 ]
      else
        echo "Nothing changed - nothing to do"
        fi ## if [ $changed -gt 0 ] else
      fi
    ;;
  stop)
    echo "Nothing to stop..." | tee -a "$GLOBAL_LOGFILE"
    ;;

  uninstall)
    mount -o remount,rw /
    cd "${ADDON_DIR}"
    echo "Running scripts..."    
    for f in "${ADDON_DIR}"/uninstall_* ; do
      echo "  - $(basename "$f")"; ./"$(basename "$f")" >> "$GLOBAL_LOGFILE" 2>"$GLOBAL_ERRFILE"
      done
    ./patchworker uninstall "${ADDON_NAME}" ${PATCHVERSION} "$model.$version.$build.$bdate"

    echo "Deleting symlinks for firmware files..." | tee -a "$GLOBAL_LOGFILE"
    for f in "${FIRMWARE_RFTYPES_SOURCE_DIR}"/*.xml ; do
      rm -f "${FIRMWARE_RFTYPES_DEST_DIR}/$(basename "$f")"
      echo "  - Link ${FIRMWARE_RFTYPES_DEST_DIR}/$(basename "$f") deleted"
      done

    cd /www

#   echo "######## REVOKE COMMON PATCHES ########"
#   patchsubdir=common
#   for patchfile in ${PATCH_DIR}/$patchsubdir/* ; do
#     echo "Rejecting $patchsubdir patch file $(basename $patchfile)" | tee -a $GLOBAL_LOGFILE
#     patch -R -p3 -i $patchfile
#     done
#      
#   echo "######## REVOKE VERSION DEPENDEND PATCHES ########"
#   if [ $PATCHVERSION -le 1 ]; then
#     patchsubdir=le_343
#   else
#     patchsubdir=ge_345
#     fi
#     
#   for patchfile in ${PATCH_DIR}/$patchsubdir/* ; do
#     echo "Rejecting $patchsubdir patch file $(basename $patchfile)" | tee -a $GLOBAL_LOGFILE
#     patch -R -p3 -i $patchfile
#     done
#
#   [[ -f ./webui/webui.js.orig ]] && rm ./webui/webui.js.orig
#   [[ -f ./rega/esp/datapointconfigurator.fn.orig ]] && rm ./rega/esp/datapointconfigurator.fn.orig
#   [[ -f ./rega/esp/functions.fn.orig ]] && rm ./rega/esp/functions.fn.orig
#   [[ -f ./rega/esp/side.inc.orig ]] && rm ./rega/esp/side.inc.orig
#   [[ -f ./rega/pages/tabs/admin/views/programs.htm.orig ]] && rm ./rega/pages/tabs/admin/views/programs.htm.orig
#   [[ -f ./config/ic_common.tcl.orig ]] && rm ./config/ic_common.tcl.orig
#   [[ -f ./webui/js/extern/jp_webui_inc.js ]] && rm ./webui/js/extern/jp_webui_inc.js
  		    		    		
    cd /
    if [ -n "$DEBUG" ]; then
      find "$ADDON_DIR" ! -name 'inst.log' -type f -exec rm -f {} +
      # keep the logfile, delete all other files 
      # exec: Don't create now process in a subshell but do the command in existing process
      # {} represents the found files
      # + combines the to a list which is executed with one single rm command
      # \; or ';' would send each file separated to an rm command
      find "$ADDON_DIR" -type d -empty -delete
      echo "$0 Uninstall done, Debug mode: Logfile $GLOBAL_LOGFILE preserved, not deleted" | tee -a "$GLOBAL_LOGFILE"
      
    else
      rm -rf "$ADDON_DIR"
    fi
    rm -rf "$WWW_DIR" # /etc/config/addons/www/${ADDON_NAME}

    sync
    mount -o remount,ro /
    rm -f "${RC_DIR}/${ADDON_NAME}" # this script file itself!
    ;; # uninstall end
  
  restart|reload)
    echo "$1: Nothing to do..." | tee -a "$GLOBAL_LOGFILE"
    # Operations to stop and start (restart) the addon
    ;;

  # Es wird info und info.de aufgerufen und das Ergebnis hinterienander im Zusatzsoftware-Dialog dargestellt
  info)
    echo "$1: Sending html for the description in AddOn-Dialog to stdout ..." >> "$GLOBAL_LOGFILE"
    echo "Info: <a href='https://github.com/schmidhorst/HB-HS-Devices-AddOn' target=\"_blank\"><center><b>HB-HS-Devices AddOn</b><br><img src='../addons/${ADDON_NAME}/${ADDON_NAME}.png'></center></a>"
    echo "Info: <center>(c) 2023...2024 Horst Schmid</center><br>"
    echo "Version: $(cat "${ADDON_DIR}"/VERSION)" # installierte Version
    echo "Name: ${ADDON_NAME_UPC}"
    echo "Operations: uninstall" # Button im Dialog 
    echo "Update: /addons/${ADDON_NAME}/update-check.cgi" # ist dafür unter /usr/local/etc/config/addons/www/ ein Link notwendig?
    ;;

  info.de)
    echo "$1: Kein zusätzliches Info in Deutsch!" >> "$GLOBAL_LOGFILE"
    ;;

  *)
    echo "Usage: $ADDON_NAME {start|info|uninstall}" >&2
    echo "$1: Wrong usage" >> "$GLOBAL_LOGFILE"    
    echo "=== Exit from $0 with result 1 ===" >> "$GLOBAL_LOGFILE"
    exit 1
    ;;

  esac
res=$?
if [ $res -ne 0 ] || [ -n "$DEBUG" ]; then
  echo "$(date +"%Y-%m-%d %H:%M:%S") === Exit from $0 with result $res ===" | tee -a "$GLOBAL_LOGFILE"
fi
exit $res
